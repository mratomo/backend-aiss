"""Settings for the attack-vulnerability-service."""

import os
from typing import Dict, List, Optional

from pydantic_settings import BaseSettings
from pydantic import Field


class MCPSettings(BaseSettings):
    """MCP-specific settings."""
    context_service_url: str = Field(default="http://context-service:8083")
    default_context_id: str = Field(default="general_knowledge")
    default_system_prompt: str = Field(default="")


class Settings(BaseSettings):
    """Application settings."""

    # Server settings
    debug: bool = Field(default=False)
    host: str = Field(default="0.0.0.0")
    port: int = Field(default=8400)
    app_name: str = Field(default="attack-vulnerability-service")
    
    # CORS settings
    cors_origins: List[str] = Field(
        default=["*"]
    )
    cors_headers: List[str] = Field(
        default=["*"]
    )
    
    # Auth
    auth_enabled: bool = Field(default=True)
    api_key_header: str = Field(default="X-API-Key")
    api_key: str = Field(default="")
    
    # ATT&CK CTI settings
    attack_cache_dir: str = Field(default="/app/cache")
    attack_cache_ttl_hours: int = Field(default=24)
    
    # Vulnerability analysis settings
    high_severity_threshold: float = Field(default=0.8)
    medium_severity_threshold: float = Field(default=0.5)
    max_vulnerabilities_per_report: int = Field(default=50)
    
    # LLM settings for vulnerability analysis
    llm_provider_url: str = Field(default="http://rag-agent:8080/api/v1/llm")
    llm_provider_type: str = Field(default="mcp")  # mcp, openai, google, anthropic, ollama
    llm_max_tokens: int = Field(default=1024)
    llm_temperature: float = Field(default=0.3)
    
    # MCP settings
    mcp_service_url: str = Field(default="http://context-service:8083")
    mcp: MCPSettings = Field(default_factory=MCPSettings)
    
    # Logging
    log_level: str = Field(default="INFO")

    model_config = {
        "env_file": ".env",
        "env_file_encoding": "utf-8",
        "extra": "ignore",
    }